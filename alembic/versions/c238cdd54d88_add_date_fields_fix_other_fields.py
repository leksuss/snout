"""add date fields, fix other fields

Revision ID: c238cdd54d88
Revises: d7aced4ebd37
Create Date: 2024-11-19 02:52:23.090395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c238cdd54d88'
down_revision: Union[str, None] = 'd7aced4ebd37'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'cities', ['id_vk'])
    op.create_unique_constraint(None, 'countries', ['id_vk'])
    op.add_column('publications', sa.Column('date_published', sa.Date(), nullable=False))
    op.create_unique_constraint(None, 'publications', ['id_vk'])
    op.add_column('users', sa.Column('checked_at', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('users', 'is_closed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_unique_constraint(None, 'users', ['id_vk'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'is_closed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_column('users', 'checked_at')
    op.drop_constraint(None, 'publications', type_='unique')
    op.drop_column('publications', 'date_published')
    op.drop_constraint(None, 'countries', type_='unique')
    op.drop_constraint(None, 'cities', type_='unique')
    # ### end Alembic commands ###
